%iki noktayý baðlamak için kullanýlan method
function arr = newtonInt( arr,p1,p2,k1,sizex,sizey )
test = 2; %ee hangisi bea hiçbiri :))
drawtest = 1;
drawall = true;
all=false;
if  abs(p2(1,2)-p1(1,2)) > abs(p1(1,1)-p2(1,1))
    %fprintf('yler farký büyük');
    if  k1(1,1)== p1(1,1)
        k1(1,1)= k1(1,1)+1;
    end
    if  p1(1,1)== p2(1,1)
        p1(1,1)= p1(1,1)+1;
    end
    if  k1(1,2)== p1(1,2)
        k1(1,2)= k1(1,2)+1;
    end
    if  p1(1,2)== p2(1,2)
        p1(1,2)= p1(1,2)+1;
    end
 

    t1 =  k1(1,2);
    t2 =  p1(1,2); 
    t3 =  p2(1,2); 
    
    f_t1 =  k1(1,1); 
    f_t2 =  p1(1,1); 
    f_t3 =  p2(1,1); 
    
    f_t1_t2 = (f_t2 - f_t1) / (t2 - t1); % t2 ve t1 hiçbir zaman eþit olmamalý p1.x != k1.x
    f_t2_t3 = (f_t3 - f_t2) / (t3 - t2); %t3 ve t2 hiçbir zaman eþit olmamalý p1.x != p2.x
    f_t1_t2_t3 = (f_t2_t3 - f_t1_t2) / (t3 - t1); %t3 ve t1 hiçbir zaman eþit olmamalý p2.x != k1.x
    
    if  t2 > t3
        count=0; 
        pastx = 0;
        pasty = 0;
        
        t1 =  k1(1,2); %x0
        t2 =  p1(1,2); %x1
        t3 =  p2(1,2); %x2
        
        f_t1 =  k1(1,1); % f(x0)
        f_t2 =  p1(1,1); % f(x1)
        f_t3 =  p2(1,1); % f(x2)
               
        f_t3_t2 = (f_t3 - f_t2) / (t3 - t2); % t2 ve t1 hiçbir zaman eþit olmamalý p1.x != k1.x
        f_t2_t1 = (f_t2 - f_t1) / (t2 - t1); %t3 ve t2 hiçbir zaman eþit olmamalý p1.x != p2.x
        f_t3_t2_t1 = (f_t3_t2 - f_t2_t1) / (t3 - t1); %t3 ve t1 hiçbir zaman eþit olmamalý p2.x != k1.x
        
        connected = true;
        for t=t3:t2
            y = int32(f_t3 +f_t3_t2 * (t - t3) + f_t3_t2_t1 * (t - t3) * (t - t2));
            if y < sizey & y > 0
                
                if drawall | drawtest=1
                       arr(y,t) = 0;  % ilk hata nedeni
                       connected = connectedCheck(arr ,y , t);
                       if connected ~= true  & ~(y== p1(1,1) & t == p1(1,2) |  y == p2(1,1) & t == p2(1,2))
                           [pointx, pointy] = connectedPoint(arr ,pastx , pasty  );

                       innerk1(1,1) = pointx;
                       innerk1(1,2) = pointy;
                       innerp1(1,1)= pastx;
                       innerp1(1,2)=pasty;
                       innerp2(1,1) = y;
                       innerp2(1,2) = t;
                        if test == 1 | all == true
                            1
                            innerk1 
                           innerp1
                           innerp2
                           if ~(pointx == 0 & pointy == 0) %yukarýlara ekle ayný þey ama olsun.
                                 arr=newtonInt(arr,innerp1,innerp2,innerk1,sizex,sizey); % þimdi ilk sorunlarý çözen kýsmý bul burdakileri
                                % bura mý?evet deðil gibi
                           end

                        end % bunu da ekle baride daha iyi test edek.yaa azcýk karýþýk geldi nereye 
                  % nasýl? þimdilik?daha iyi ama karar noktasý sýkýntýsýndan dolayý
                  % böyle tek boþluk kaldý sadece ayrýca da??ne?
                       end
                end
               pastx = y;
               pasty = t; 
               count =  count+1;
            end
        end
    else
        count = 0;
        pastx = 0;
        pasty = 0;
        connected = true;
        for t=t2:t3 
            y = int32(f_t1 +f_t1_t2 * (t - t1) + f_t1_t2_t3 * (t - t1) * (t - t2)  );
            if y < sizey & y >0
                  if drawall | drawtest=1
                arr(y,t) = 0 ;
                connected = connectedCheck(arr ,y , t );
                if connected ~= true &  ~(y == p1(1,1) & (t == p1(1,2)) |  y == p2(1,1) & ( t == p2(1,2)))
                    [pointx, pointy] = connectedPoint(arr ,pastx , pasty  );
                 
                    
                     
               innerk1(1,1) = pointx;
               innerk1(1,2) = pointy;
               innerp1(1,1)= pastx;
               innerp1(1,2)=pasty;
               innerp2(1,1) = y;
               innerp2(1,2) = t;
                if test == 2 | all == true
                    2
                     innerk1 
                   innerp1
                   innerp2
                   if ~(pointx == 0 & pointy == 0) %yukarýlara ekle ayný þey ama olsun.
                         arr=newtonInt(arr,innerp1,innerp2,innerk1,sizex,sizey);
                   end
               
                end
                end% düzelt
                  end
                pastx = y;
                pasty = t; 
                count = count+1;
            end
        end
    end
    
else
%fprintf('xler farký büyük');
if k1(1,1) == p1(1,1)
    k1(1,1) = k1(1,1)+1;
end
if p1(1,1) == p2(1,1)
    p1(1,1) = p1(1,1)+1;
end
if k1(1,2) == p1(1,2)
    k1(1,2) = k1(1,2)+1;
end
if p1(1,2)== p2(1,2)
    p1(1,2) = p1(1,2)+1;
end

t1 =  k1(1,1); %x0
t2 =  p1(1,1); %x1
t3 =  p2(1,1); %x2

f_t1 =  k1(1,2); % f(x0)
f_t2 =  p1(1,2); % f(x1)
f_t3 =  p2(1,2); % f(x2)

f_t1_t2 = (f_t2 - f_t1) / (t2 - t1); % t2 ve t1 hiçbir zaman eþit olmamalý p1.x != k1.x
f_t2_t3 = (f_t3 - f_t2) / (t3 - t2); %t3 ve t2 hiçbir zaman eþit olmamalý p1.x != p2.x
f_t1_t2_t3 = (f_t2_t3 - f_t1_t2) / (t3 - t1); %t3 ve t1 hiçbir zaman eþit olmamalý p2.x != k1.x

if  t2 > t3
  
    t1 =  k1(1,1); %x0
    t2 =  p1(1,1); %x1
    t3 =  p2(1,1); %x2
    
    f_t3_t2 = (f_t3 - f_t2) / (t3 - t2); % t2 ve t1 hiçbir zaman eþit olmamalý p1.x != k1.x
    f_t2_t1 = (f_t2 - f_t1) / (t2 - t1); %t3 ve t2 hiçbir zaman eþit olmamalý p1.x != p2.x
    f_t3_t2_t1 = (f_t3_t2 - f_t2_t1) / (t3 - t1); %t3 ve t1 hiçbir zaman eþit olmamalý p2.x != k1.x
    
    count=0; 
    pastx = 0;
    pasty = 0;
    
    for t=t3:t2
        y = int32(f_t3 + f_t3_t2 * (t - t3) + f_t3_t2_t1 * (t - t3) * (t - t2)); % demekki bu yanlýþ.nasýl düzeltcez.backward newton a bak tekrar netten.
        if y < sizex & y>0
            arr(t,y) = 0; % ikinci hata nedeni
            connected = connectedCheck(arr ,t , y );
            
            if connected ~= true & ~(t == p1(1,1) & y == p1(1,2) |  t == p2(1,1) & y == p2(1,2))
                [pointx, pointy]= connectedPoint(arr ,pastx , pasty  ) ;
                  pointx
                    pointy
               innerk1(1,1) = pointx;
               innerk1(1,2) = pointy;
               innerp1(1,1)= pastx;
               innerp1(1,2)= pasty;
               innerp2(1,1) = t;
               innerp2(1,2) = y;
                if test == 3 | all == true
                   
                    3
                     innerk1 
                    innerp1
                  innerp2                         %aþkým biz yarýn kaçta buluþcaz 12.3 iyi mi..evet iyi sanýrým ama þimdi çok yoruldum artýk ben.tmm burda býrakalým zaten benm de yarýn için ha.z.ý.rlanmam lazým..hýmm. buarada kodda onlar yanlýþ çiziyor onlarda çözülürse ilk kýsým gibi çizerler biraz düþünmek lazým hmm sence çok iþi var mý aþkým. yok bence ama iþte.çarþamba 2 tane iç içe çember götürmem lazým okula:) kaðýda çiz götür sende ooooooo komik.yaparýz o zamana kadar belki dur bakalým. en azýndan iç içe kýsmýný hallederiz.ok aþkým sen öyle dedikten sonra ben sana güveniyorum ki yarýn ne giycem bilion mu.hauyýr.tmm yarn görürsün .had bakalým.sen napcan þimdi.az dinleniyim ya kaç gündür hayatýmýn en yoðun g
                 %%günleriydi.tamam caným belki sen de yarýn benm için
                 %%süslenirsin.ya yorgunum þuan. aman tamam yaa hadi dinlen
                 %%iyi geceler.saðol caným sana da kpss ya bakcam az
                    if ~(pointx == 0 & pointy == 0) %yukarýlara ekle ayný þey ama olsun.
                    arr=newtonInt(arr,innerp1,innerp2,innerk1,sizex,sizey);
                   end
                end
                
            end % yazdýr bi pointx ve y yi

            count = count +1;
            pastx = t;
            pasty = y; 
        end
    end
    
else
    count = 0;
    pastx = 0;
    pasty = 0; % þu past x pasty yapýsýný diðerlerine de yap aim ya bi k
    for t=t2:t3
        y = int32(f_t1 +f_t1_t2 * (t - t1) + f_t1_t2_t3 * (t - t1) * (t - t2));
        if y < sizex & y>0
           arr(t,y) = 0;
            connected = connectedCheck(arr ,t , y ); 
             
            if connected ~= true & ~(t == p1(1,1) & y == p1(1,2) |  t == p2(1,1) & y == p2(1,2))
                  [pointx, pointy] = connectedPoint(arr ,pastx , pasty );
                  
                    pointx
                    pointy
               innerk1(1,1) = pointx;
               innerk1(1,2) = pointy;
               innerp1(1,1)= pastx;
               innerp1(1,2)=pasty;
               innerp2(1,1) = t;
               innerp2(1,2) = y;
                %  diðerlerine de yap aynýsýný return den önce ama t ve y
                if test == 4 | all ==true
                   4
                  innerk1 
                   innerp1 
                   innerp2
                    if ~(pointx == 0 & pointy == 0) %yukarýlara ekle ayný þey ama olsun.
                        arr=newtonInt(arr,innerp1,innerp2,innerk1,sizex,sizey);
                   end
                  
                end
                  
            end
            pastx = t;
            pasty = y;  
            count = count +1;
        end
    end
end
end
end

function check = connectedCheck ( arr, t ,y )
    check = false;
    if   arr( t-1 ,y-1) == 0 | arr( t ,y-1) == 0 | arr( t+1 ,y-1) == 0 | arr( t+1 ,y) == 0 | arr( t+1 ,y+1) == 0 | arr( t ,y+1) == 0 | arr( t-1 ,y+1) == 0 |arr( t-1 ,y) == 0
        check = true ;   
    end
end


function [pointx, pointy] = connectedPoint ( arr, t ,y )  %yaaa eskisi nde daha yiyi çiziodu..sen bi çözde þu ters dönmesini
             pointx = 0;
             pointy=0; 
        if t==0 | y==0
            t
y
        return
        end
    if   arr( t-1 ,y-1) == 0 
        pointx = t-1;
        pointy = y-1;
    end
    if arr( t ,y-1) == 0
        pointx=t;
        pointy=y-1;
    end
    if arr( t+1 ,y-1) == 0
            pointx=t+1; %ilk çizeni arýoz demi...hayýr yanlýþ çizenleri tmm ilk de var
            pointy=y-1;
    end
    if arr( t+1 ,y) == 0
        pointx=t+1;
        pointy=y;
    end
    if arr( t+1 ,y+1) == 0
        pointx=t+1;
        pointy=y+1;
    end
    if  arr( t ,y+1) == 0
        pointx=t;
        pointy=y+1;
    end
    if arr( t-1 ,y+1) == 0 
        pointx=t-1;
        pointy=y+1;
    end
    if arr( t-1 ,y) == 0
     pointx = t-1;
     pointy = y;
    end
    
end











