%iki noktay? ba?lamak i?in kullan?lan method
function arr = newtonInt( arr,p1,p2,k1,sizex,sizey )
drawtest = 2;
drawall = true;

test = 0; 
all = true;
if  abs(p2(1,2)-p1(1,2)) > abs(p1(1,1)-p2(1,1))
    %fprintf('yler fark? b?y?k');
    if  k1(1,1)== p1(1,1)
        k1(1,1)= k1(1,1)+1;
    end
    if  p1(1,1)== p2(1,1)
        p1(1,1)= p1(1,1)+1;
    end
    if  k1(1,2)== p1(1,2)
        k1(1,2)= k1(1,2)+1;
    end
    if  p1(1,2)== p2(1,2)
        p1(1,2)= p1(1,2)+1;
    end
 

    t1 =  k1(1,2);
    t2 =  p1(1,2); 
    t3 =  p2(1,2); 
    
    f_t1 =  k1(1,1); 
    f_t2 =  p1(1,1); 
    f_t3 =  p2(1,1); 
    % bu do?ru mu baksana bi 
    f_t1_t2 = (f_t2 - f_t1) / (t2 - t1); % t2 ve t1 hi?bir zaman e?it olmamal? p1.x != k1.x
    f_t2_t3 = (f_t3 - f_t2) / (t3 - t2); %t3 ve t2 hi?bir zaman e?it olmamal? p1.x != p2.x
    f_t1_t2_t3 = (f_t2_t3 - f_t1_t2) / (t3 - t1); %t3 ve t1 hi?bir zaman e?it olmamal? p2.x != k1.x
    
    if  t2 > t3
        count=0; 
        pastx = 0;
        pasty = 0;
        
        t1 =  k1(1,2); %x0
        t2 =  p1(1,2); %x1
        t3 =  p2(1,2); %x2
        
        f_t1 =  k1(1,1); % f(x0)
        f_t2 =  p1(1,1); % f(x1)
        f_t3 =  p2(1,1); % f(x2)
               
        f_t3_t2 = (f_t3 - f_t2) / (t3 - t2); % t2 ve t1 hi?bir zaman e?it olmamal? p1.x != k1.x
        f_t2_t1 = (f_t2 - f_t1) / (t2 - t1); %t3 ve t2 hi?bir zaman e?it olmamal? p1.x != p2.x
        f_t3_t2_t1 = (f_t3_t2 - f_t2_t1) / (t3 - t1); %t3 ve t1 hi?bir zaman e?it olmamal? p2.x != k1.x
        
        connected = true;
        for t=t3:t2
            y = int32(f_t3 +f_t3_t2 * (t - t3) + f_t3_t2_t1 * (t - t3) * (t - t2));
            if y < sizey & y > 0
                
                if drawall==true | drawtest==1
                       arr(y,t) = 0;  % ilk hata nedeni
                       connected = connectedCheck(arr ,y , t);
                       if connected ~= true  & ~(y== p1(1,1) & t == p1(1,2) |  y == p2(1,1) & t == p2(1,2))
                           [pointx , pointy ] =  goBack(arr, pastx , pasty,10); % yap de?i?iklikleri

                       innerk1(1,1) = pointx;
                       innerk1(1,2) = pointy;
                       innerp1(1,1)= pastx;
                       innerp1(1,2)=pasty;
                       innerp2(1,1) = y;
                       innerp2(1,2) = t;
                        if test == 1 | all == true
                      
                           if ~(pointx == 0 & pointy == 0) 
                                 arr = newtonInt(arr,innerp1,innerp2,innerk1,sizex,sizey);
                              
                           end

                        end
                       end
                end
               pastx = y;
               pasty = t; 
               count =  count+1;
            end
        end
    else
        count = 0;
        pastx = 0;
        pasty = 0;
        connected = true;
        for t=t2:t3 
            y = int32(f_t1 +f_t1_t2 * (t - t1) + f_t1_t2_t3 * (t - t1) * (t - t2)  );
            if y < sizey & y >0
                  if drawall==true | drawtest==2
                arr(y,t) = 0 ;
                connected = connectedCheck(arr ,y , t );
                if connected ~= true &  ~(y == p1(1,1) & (t == p1(1,2)) |  y == p2(1,1) & ( t == p2(1,2)))
                   [pointx , pointy ] =  goBack(arr, pastx , pasty,10); % yap de?i?iklikleri
                 
               innerk1(1,1) = pointx;
               innerk1(1,2) = pointy;
               innerp1(1,1)= pastx;
               innerp1(1,2)=pasty;
               innerp2(1,1) = y;
               innerp2(1,2) = t;
                if test == 2 | all == true
               
                   if ~(pointx == 0 & pointy == 0) 
                         arr=newtonInt(arr,innerp1,innerp2,innerk1,sizex,sizey);
                   end
               
                end
                end% d?zelt
                  end
                pastx = y;
                pasty = t; 
                count = count+1;
            end
        end
    end
    
else
%fprintf('xler fark? b?y?k');
if k1(1,1) == p1(1,1)
    k1(1,1) = k1(1,1)+1;
end
if p1(1,1) == p2(1,1)
    p1(1,1) = p1(1,1)+1;
end
if k1(1,2) == p1(1,2)
    k1(1,2) = k1(1,2)+1;
end
if p1(1,2)== p2(1,2)
    p1(1,2) = p1(1,2)+1;
end

t1 =  k1(1,1); %x0
t2 =  p1(1,1); %x1
t3 =  p2(1,1); %x2

f_t1 =  k1(1,2); % f(x0)
f_t2 =  p1(1,2); % f(x1)
f_t3 =  p2(1,2); % f(x2)

f_t1_t2 = (f_t2 - f_t1) / (t2 - t1); % t2 ve t1 hi?bir zaman e?it olmamal? p1.x != k1.x
f_t2_t3 = (f_t3 - f_t2) / (t3 - t2); %t3 ve t2 hi?bir zaman e?it olmamal? p1.x != p2.x
f_t1_t2_t3 = (f_t2_t3 - f_t1_t2) / (t3 - t1); %t3 ve t1 hi?bir zaman e?it olmamal? p2.x != k1.x

if  t2 > t3
  
    t1 =  k1(1,1); %x0
    t2 =  p1(1,1); %x1
    t3 =  p2(1,1); %x2
    
    f_t3_t2 = (f_t3 - f_t2) / (t3 - t2); % t2 ve t1 hi?bir zaman e?it olmamal? p1.x != k1.x
    f_t2_t1 = (f_t2 - f_t1) / (t2 - t1); %t3 ve t2 hi?bir zaman e?it olmamal? p1.x != p2.x
    f_t3_t2_t1 = (f_t3_t2 - f_t2_t1) / (t3 - t1); %t3 ve t1 hi?bir zaman e?it olmamal? p2.x != k1.x
    
    count=0; 
    pastx = 0;
    pasty = 0;
    
    for t=t3:t2
        y = int32(f_t3 + f_t3_t2 * (t - t3) + f_t3_t2_t1 * (t - t3) * (t - t2)); % demekki bu yanl??.nas?l d?zeltcez.backward newton a bak tekrar netten.
        if y < sizex & y>0
              if drawall==true | drawtest==3
            arr(t,y) = 0; % ikinci hata nedeni
            connected = connectedCheck(arr ,t , y );
            
            if connected ~= true & ~(t == p1(1,1) & y == p1(1,2) |  t == p2(1,1) & y == p2(1,2))
                 [pointx , pointy ] =  goBack(arr, pastx , pasty,10); % yap de?i?iklikleri
               
               innerk1(1,1) = pointx;
               innerk1(1,2) = pointy;
               innerp1(1,1)= pastx;
               innerp1(1,2)= pasty;
               innerp2(1,1) = t;
               innerp2(1,2) = y;
                if test == 3 | all == true  % nweton int daha iyi ?iziyodu tek geri gidince:)
                 
                    if ~(pointx == 0 & pointy == 0)  
                    arr=newtonInt(arr,innerp1,innerp2,innerk1,sizex,sizey);
                   end
                end
            end
              end  

            count = count +1;
            pastx = t;
            pasty = y; 
        end
    end
    
else
    count = 0;
    pastx = 0;
    pasty = 0;  
    for t=t2:t3
        y = int32(f_t1 +f_t1_t2 * (t - t1) + f_t1_t2_t3 * (t - t1) * (t - t2));
        if y < sizex & y>0
              if drawall==true | drawtest==4
           arr(t,y) = 0;
            connected = connectedCheck(arr ,t , y ); 
             
            if connected ~= true & ~(t == p1(1,1) & y == p1(1,2) |  t == p2(1,1) & y == p2(1,2))
               

                  [pointx , pointy ] =  goBack(arr, pastx , pasty,10); % yap de?i?iklikleri
                     
               innerk1(1,1) = pointx;
               innerk1(1,2) = pointy;
               innerp1(1,1)= pastx;
               innerp1(1,2)= pasty;
               innerp2(1,1) = t;
               innerp2(1,2) = y;
                
                if test == 4 | all ==true
                  
                    if ~(pointx == 0 & pointy == 0)  
                        arr=newtonInt(arr,innerp1,innerp2,innerk1,sizex,sizey);
                   end
                  
                end
                  
            end
              end
            pastx = t;
            pasty = y;  
            count = count +1;
        end
    end
end
end
end

function check = connectedCheck ( arr, t ,y )
    check = false;
    if   arr( t-1 ,y-1) == 0 | arr( t ,y-1) == 0 | arr( t+1 ,y-1) == 0 | arr( t+1 ,y) == 0 | arr( t+1 ,y+1) == 0 | arr( t ,y+1) == 0 | arr( t-1 ,y+1) == 0 |arr( t-1 ,y) == 0
        check = true ;   
    end
end


function [pointx, pointy] = connectedPoint ( arr, t ,y )  %yaaa eskisi nde daha yiyi ?iziodu..sen bi ??zde ?u ters d?nmesini
             pointx = 0;
             pointy=0; 
        if t==0 | y==0 
  
        return
        end
    if   arr( t-1 ,y-1) == 0 
        pointx = t-1;
        pointy = y-1;
    end
    if arr( t ,y-1) == 0
        pointx=t;
        pointy=y-1;
    end
    if arr( t+1 ,y-1) == 0
            pointx=t+1; 
            
            
            pointy=y-1;
    end
    if arr( t+1 ,y) == 0
        pointx=t+1;
        pointy=y;
    end
    if arr( t+1 ,y+1) == 0
        pointx=t+1;
        pointy=y+1;
    end
    if  arr( t ,y+1) == 0
        pointx=t;
        pointy=y+1;
    end
    if arr( t-1 ,y+1) == 0 
        pointx=t-1;
        pointy=y+1;
    end
    if arr( t-1 ,y) == 0
     pointx = t-1;
     pointy = y;
    end
    
end











